// Orange close button
windowcontrols {
    button {
        &.close {
            background: $selected_bg_color;

            &:hover {
                background: lighten($selected_bg_color, 5%);
            }

            &:active {
                background: darken($selected_bg_color, 5%);
            }

            &:backdrop {
                background: desaturate($selected_bg_color, 100%);
            }

            image {
                color: $porcelain;
            }
        }
    }
}

// Fix windowcontrols misalignement
windowcontrols {
    margin-left: 7px;
}

// Reducing the amount of the palette's background colors to two
.sidebar { background-color: $bg_color; }

// increasing brightness and contrast of sliders and buttons in OSDs
scale {
    > trough > slider {
        .osd & {
            @include button(osd);
            background-image: image(darken($osd_fg_color, 2%));

            &:hover {
                background-image: image(darken($osd_fg_color, 10%));
            }

            &:active {
                background-image: image(darken($osd_fg_color, 25%));
            }
        }
    }
}

// Entries drown if drawn on widgets with $base_color
// Fixing this at least for notebooks, since entries on tabs is a common pattern
@if $variant=='dark' {
    notebook entry { background-color: darken($base_color, 2%); }
}

// Add some transitions on widgets
check,
radio,
switch,
switch slider,
scale > trough,
scale > trough > slider,
scale > trough > highlight {
    transition: $button_transition;
}

// Due to the ubuntu orange beeing quiet bright
// we change the sidebar selection from a full orange
// row to a thin orange stripe plus a soft gray selection
$_selection_bg: if($variant=='light', darken($bg_color, 5%), lighten($base_color, 5%));
list row, placessidebar row, sidebar row, .sidebar row {
  &:selected {
    &.activatable, & {
      &, &:hover {
        background: linear-gradient(to right, $selected_bg_color 4px, $_selection_bg 1px);
        &, button, button image { color: $text_color; }
        button.suggested-action, button.destructive-action { &:not(.image-button) { &, & image { color: white; } } }
      }
    }
  }
}
